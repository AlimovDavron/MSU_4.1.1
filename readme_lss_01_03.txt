Документация.

Данная программа решает задачу поиска собственных чисел методом LR разложения с упрощением методом отражений.

Описание алгоритма:
    ...

Компоненты программы:
    1. main_01_03.c
    2. sim_01_03.c
    3. evc_01_03.c

Функции реализованные в файле main_01_03.c:
    int _strlen(char const *input)
        Описание:
            Функция принимает на вход строку и возвращает её длину.
        Аргументы функции:
            Строка
        Возвращаемые значения:
            Целое число - длина строки.

    int validateFile(char* filename)
        Описание:
            Функция принимает на вход путь к файлу в виде строки.
        Аргументы функции:
            Строка
        Возвращаемые значения:
            0 - Такого файла по данному пути не существует.
            1 - Файл по данному пути существует.

    int validateParameters(int argc, char **argv)
        Описание:
            Функция принимает на вход аргументы переданные в консоли и проверяет их на корректность.
        Аргументы:
            Целое число - Количество аргументов .
            Указатель - массив аргументов.
        Возвращаемые значения:
            0 - Валидация флагов прошла успешно и соответствуют условиям.
            1 - Названий файлов больше, чем 2.
            2 - Ошибка ввода параметров. Такого флага не существует или не передано значение параметру.
            3 - Значение параметра количества итераций отрицательное.

    int readInputData(char *inputFile, double** A, double** B, double** X, int *n)
        Описание:
            Функция принимает на вход название файла, указатели на матрицы и размер матрицы.
            Выделяет память для них, проверяет входные данные на корректность.
        Аргументы функции:
            Строка - название файла.
            Указатель - матрица.
            Указатель - размер матрицы.
        Возвращаемые значения:
            0 - Успешно. Функция выделила память, считала нужно количество данных, проверила их на корректность и не выявила ошибок
            6 - Ошибка. Файл входных данных пуст.
            7 - Ошибка. Размер матрицы системы не является положительным целым числом.
            8 - Ошибка. Недостаточно элементов матрицы.
            9 - Ошибка. Один из элементов матрицы не является числом.

    void writeAnswer(char *outputFile, int n, const double* X, int result)
        Описание:
            Функция принимает на вход выходной файл, размер матрицы, указатель на решение и переменную для обозначения существования ответа.
        Аргументы функции:
            Строка - название выходного файла.
            Целое число - размер матрицы.
            Указатель - массив с решением задачи.
            Целое число - параметр (-1, если ответа не существует, иначе - 0, если успешно, 1, если точность не сошлась).
        Возвращаемые значения:
            Нет.

    void printHelp()
        Описание:
            Функция выводит в консоль справочную информацию.
        Аргументы функции:
            Нет.
        Возвращаемые значения:
            Нет.

Функции реализованные в файле sim_01_03.c:
    size_t lss_memsize_01_03(int n)
        Описание:
            Функция принимает на вход размер квадратной матрицы и возвращает количество памяти,
            необходимое алгоритму для решения задачи.
        Аргументы функции:
            Целое число - размер матрицы.
        Возвращаемые значения:.
            Целое неотрицательное число - необходимое количество памяти.

    typedef struct {
        int* n,* m;
        double* matrix;
    }Matrix; - Структура для представления матрицы,
        где *n - указатель на количество строк
        *m - указатель на количество столбцов
        double* matrix - указатель на матрицу

    void printMatrix(Matrix matrix)
        Описание:
            Функция принимает структуру матрица и отображает на экран.
        Аргументы функции:
            Нет.
        Возвращаемые значения:
            Нет.

    void copyMatrix(Matrix original, Matrix target)
         Описание:
            Функция принимает на вход две матрицы и копирует содержимое первой матрицы во вторую.
        Аргументы функции:
            Структура матрица - матрица "оригинал"
            Структура матрица - матрица, куда помещается содержимое "оригинала"
        Возвращаемые значения:
            Нет.

    void multiplyByN(Matrix A, double n)
         Описание:
            Функция принимает на вход матрицу, число и умножает каждый элемент матрицы на число.
        Аргументы функции:
            Структура матрица - матрица
            Число - число на которое умножается каждый элемент матрицы
        Возвращаемые значения:
            Нет.

    double scalarMultiplication(Matrix a, Matrix b)
        Описание:
            Функция принимает на вход два вектора и возвращает их скалярное произведение
        Аргументы функции:
            Структура матрица - вектор. Необходимо, чтобы n > 0 и m = 1
            Структура матрица - вектор, Необходимо, чтобы n > 0 и m = 1 и размерность была равна размерности
                                                                           первой матрицы
        Возвращаемые значения:
            Число - скалярное произведение

    double calculateNorm(Matrix a)
        Описание:
            Функция принимает на вход вектор и возвращает норму вектора
        Аргументы функции:
            Структура матрица - матрица. Необходимо, чтобы n > 0 и m = 0
        Возвращаемые значения:
            Число - норма вектора

    void multiply(Matrix A, Matrix B, Matrix C, double precision)
        Описание:
            Функция принимает на вход три матрицы. Умножает первую матрицу на вторую
            и помещает результат в третью матрицу.
        Аргументы функции:
            Структура матрица - матрица
            Структура матрица - матрица
            Структура матрица - матрица, в которую помещается результат умножения
            Число - точность локализации нуля
        Возвращаемые значения:
            Нет

    void initA1(int iteration, Matrix A, Matrix a1)
        Описание:
            Функция принимает на вход номер столбца, матрицу и вектор и помещает
            вектор под диагональю  i-го столбца матрицы в вектор
        Аргументы функции:
            Число - номер столбца
            Структура матрица - матрица
            Структура матрица - вектор
        Возвращаемые значения:
            Нет

    int initX(Matrix a1, Matrix x, double precision)
        Описание:
            Функция принимает на вход два вектора. Считает значение вектора x согласно описанию
            алгоритма приведения симметричной матрицы к трёхдиагональному виду и помещает его во
            второй вектор
        Аргументы функции:
            Структура матрица - вектор. Необходимо, чтобы n > 0 и m = 1
            Структура матрица - вектор, Необходимо, чтобы n > 0 и m = 1 и размерность была равна размерности первой матрицы
            Число - точность локализации нуля
        Возвращаемые значения:
            1 - в случае успеха
            0 - в случае, если в процессе работы функции была осуществлена попытка разделить на ноль

    void initY(Matrix A, Matrix x, Matrix y, double precision)
        Описание:
            Функция принимает на вход матрицу и два вектора. Считает значение вектора y согласно описанию
            алгоритма приведения симметричной матрицы к трёхдиагональному виду и помещает его в третий вектор
        Аргументы функции:
            Структура матрица - матрица.
            Структура матрица - вектор. Необходимо, чтобы n > 0 и m = 1
            Структура матрица - вектор, Необходимо, чтобы n > 0 и m = 1 и размерность была равна размерности первой матрицы
            Число - точность локализации нуля
        Возвращаемые значения:
            1 - в случае успеха
            0 - в случае, если в процессе работы функции была осуществлена попытка разделить на ноль















Использование программы:
    Usage: lss [input_file_name] [output_file_name] [options]
    Where options include:
      -d    print debug messages [default OFF]
      -e    print errors [default OFF]
      -p    print matrix [default OFF]
      -t    print execution time [default OFF]
      -h, -?     print this and exit
    Default input_file_name value is lss_00_00_in.txt, default output_file_name value is lss_00_00_out.txt.

Формат входных данных.

        n
        a_1_1 a_1_2 ... a_1_n
        a_2_1 a_2_2 ... a_2_n
        .....................
        a_n_1 a_n_2 ... a_n_n
        b_1
        b_2
        ...
        b_n

    Здесь n - число уравнений в системе (число неизвестных всегда считаем равным числу уравнений), a_i_j - элементы матрицы системы, b_i - элементы вектора правой части.
    Формат чисел: n - "%d", a_i_j и b_i - "%lf".

Формат выходных данных.

        n
        x_1
        x_2
        ...
        x_n

    Если решений не существует, выходной файл будет содержать одну единственную цифру '0'.
    Формат чисел: n - "%d", x_i - "%1.9lf".


Коды возвращаемых ошибок:
    0 - Программа успешно решила задачу. Если ответа не существует, то программа вывела в файл '0', иначе - решение.
    1 - Ошибка валидации параметров. Введённого вами параметра не существует.
    2 - Ошибка валидации параметров. Вы ввели больше двух названий файлов.
    3 - Ошибка валидаиии параметров. Введённого вами файла для входных данных не существует.
    4 - Ошибка валидации параметров. Порядок параметров и названий файлов неверный.
    5 - Введённый вами файл для входных данных пуст.
    6 - Размер матрицы системы не является целым положительным числом.
    7 - Количество коэффициентов матрицы системы во входных данных меньше необходимого.
    8 - Один из коэффициентов матрицы системы во входных данных не является числом.
    9 - Количество элементов вектора свободных членов меньше необхоидимого.
    10 - Один из элементов вектора свободынх членов не является числом.

Требования к памяти:
    Данному методу требуется дополнительно n*sizeof(double) памяти для хранения порядка замены столбцов и строк.
    Для каждого шага необходимо 8 байтов, по 4 байта на индекс строки и столбца. Порядок необходим для восстановления ответа.

Применимость:
    Метод применим для всех видов матриц.

Дополнительная информация:
    Сложность метода - O(n^3). Программе было выдано около 15 тестировых входных данных с размерами матриц от 3 до 1000. Тесты были взяты с сайта https://sparse.tamu.edu/.
    Тестирование прооводилось с помощью скрипта написанного на языке Python с использованием библиотек scipy (необходимо для считывания формата .mtx) и numpy.
    Точность проверялась сверкой с решением, полученным с помощью функции numpy.linalg.solve.

Алимов Даврон. М2-16.
